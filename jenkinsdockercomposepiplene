node{
    def buildNumber = BUILD_NUMBER
    stage("Git CheckOut"){
        git url: 'https://github.com/MithunTechnologiesDevOps/spring-boot-mongo-docker.git',branch: 'master'
    }
    
    stage(" Maven Clean Package"){
      def mavenHome =  tool name: "Maven-3.6.1", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
    } 
    
    stage("Build Dokcer Image") {
         sh "docker build -t dockerhandson/spring-boot-mongo:${buildNumber} ."
    }
    
    stage("Docker Push"){
        withCredentials([string(credentialsId: 'Docker_Hub_Pwd', variable: 'Docker_Hub_Pwd')]) {
          sh "docker login -u dockerhandson -p ${Docker_Hub_Pwd}"
        }
        sh "docker push dockerhandson/spring-boot-mongo:${buildNumber}"
        
    }
    
    // Remove local image in Jenkins Server
    stage("Remove Local Image"){
        sh "docker rmi -f dockerhandson/spring-boot-mongo:${buildNumber}"
    }
    
	stage("Update image version in compose"){
	  sh "sed -i 's/VERSION/${buildNumber}/g' docker-compose.yml"
	 
	}
    stage("Deploy to DEV Docker Server"){
        sshagent(['DEV_Docker']) {
		    sh 'scp -o StrictHostKeyChecking=no  docker-compose.yml docker-compose-dev.yml ubuntu@IPOFDevDockerServer:'
            sh 'ssh -o StrictHostKeyChecking=no ubuntu@IPOFDEVDockerServer docker-compose -f  docker-compose.yml -f docker-compose-dev.yml up -d'
        }
    }
	
    stage("Deploy to QA Docker Server"){
        sshagent(['DEV_Docker']) {
		    sh 'scp -o StrictHostKeyChecking=no  docker-compose.yml docker-compose-qa.yml ubuntu@IPQADockerServer:'
            sh 'ssh -o StrictHostKeyChecking=no ubuntu@IPOFQADockerServer docker-compose -f  docker-compose.yml -f docker-compose-qa.yml up -d'
        }
    }
}
